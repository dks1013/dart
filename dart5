import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class Todo{
	bool isDone = false;
	String title;
	
	Todo(this.title);
}

class MyApp extends StatelessWidget{
	@override
	Widget build(BuildContext context){
		return MaterialApp(
			debugShowCheckedModeBanner: false,
			tile: '한 일 관리',
			theme: ThemeData(
				primarySwatch: Colors.blue,
			),
			home: TodoListPage(),
		);
	}
}

// TodoListPage 클래스
class TodoListPage extends StatelessWidget{
	@override
	_TodoListPageState createState() => _TodoListPageState();
}

//TodoListPage의 State 클래스
class _TodoListPageState extends State<TodoListPage>{
	//할 일 목록을 저장할 리스트
	final _items = <Todo>[];

	//할 일 문자열 조작을 위한 컨트롤러
	var _todoController = TextEditingController();

	//할 일 추가 메서드
	void _addTodo(Todo todo){
		setState((){
			_items.add(todo);
			_todoController.text = '';	//할 일 입력 필드를 비움
		});
	}

	//할 일 삭제 메서드
	void _deleteTodo(Todo todo){
		setState((){
			_items.remove(todo);
		});
	}

	//할 일 완료/미완료 메서드
	void _toggleTodo(Todo todo){
		setState((){
			todo.isDone = !todo.isDone;
		});
	}

	@override
	void dispose(){
		_todoController.dispose();	//사용이 끝나면 해제
		super.dispose();
	}

	@override
	Widget build(BuildContext context){
		return Scaffold(
			appBar: AppBar(
				title: Text('남은 할 일'),
			),
			body: Padding(
				padding: const EdgeInsets.all(8.0),
				child: Column(
					children: <Widget>[
						Row(
							children: <Widget>[
								Expanded(
									child: TextField(
										controller: _todoController,
									),
								),
								ElevatedButton(
									child: Text('추가'),
									//onPressed: () {},	//추가될 기능
									onPressed: () => _addTodo(Todo(_todoController.text)),
								),
							],
						),
						Expanded(
							child: ListView(
								//children: <Widget>[],	//추가될 기능
								children: _items.map((todo) => _buildItemWidget(todo)).toList(),
							),
						),
					],
				),
			),
		);
	}

	//할 일 객체를 ListTile 형태로 변경하는 메소드
	Widget _buildItemWidget(Todo todo){
		return ListTile(
			//onTap: () {},	//클릭 시 완료/취소 기능
			onTap: () => _toggleTodo(todo),
			title: Text(
				todo.title,
				style: todo.isDone	//완료일 때 스타일 적용
					?TextSytle(
						decoration: TextDecoration.lineThrough,		//취소선
						fontStyle: FontStyle.italic,	//이택릭체
					)
					:null,	//아무 스타일도 적용 안함
			),
			trailing: IconButton(
				icon: Icon(Icon.delete_forever);
				//onPressed: () {},	//쓰레기통 클릭 시 삭제 기능
				onPressed: () => _deleteTodo(todo),	//삭제
			),
		);
	}
}
